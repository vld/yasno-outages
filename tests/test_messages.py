from src.models import OutagesPlan, Slot


def test_empty_slots_messages(base_plan):
    expected_messages = [
        "üö® –ï–∫—Å—Ç—Ä–µ–Ω—ñ –≤—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è, –≥—Ä–∞—Ñ—ñ–∫–∏ –Ω–µ –¥—ñ—é—Ç—å",
        "–î—ñ—é—Ç—å –≥—Ä–∞—Ñ—ñ–∫–∏ –∑–∞–ø–ª–∞–Ω–æ–≤–∞–Ω–∏—Ö –≤—ñ–¥–∫–ª—é—á–µ–Ω—å\n‚è≥ –û—á—ñ–∫—É—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è",
        "–ë—É–¥–µ –∑–∞—Å—Ç–æ—Å–æ–≤—É–≤–∞—Ç–∏—Å—è –≥—Ä–∞—Ñ—ñ–∫\n‚è≥ –û—á—ñ–∫—É—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è",
        "–ë–µ–∑ –≤—ñ–¥–∫–ª—é—á–µ–Ω—å",
    ]
    for ind, status in enumerate(["EmergencyShutdowns", "ScheduleApplies", "WaitingForSchedule", "NoOutages"]):
        plan_dict = base_plan | {"status": status}
        plan = OutagesPlan(**plan_dict)
        assert str(plan) == expected_messages[ind]


def test_slots_messages(base_plan, slots_data):
    slots = [Slot(**d) for d in slots_data]
    expected_messages = [
        "üö® –ï–∫—Å—Ç—Ä–µ–Ω—ñ –≤—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è, –≥—Ä–∞—Ñ—ñ–∫–∏ –Ω–µ –¥—ñ—é—Ç—å",
        "–î—ñ—é—Ç—å –≥—Ä–∞—Ñ—ñ–∫–∏ –∑–∞–ø–ª–∞–Ω–æ–≤–∞–Ω–∏—Ö –≤—ñ–¥–∫–ª—é—á–µ–Ω—å\n–ù–µ–º–∞—î —Å–≤—ñ—Ç–ª–∞ ‚ùå –∑ 10:00 –¥–æ 13:00\n–ù–µ–º–∞—î —Å–≤—ñ—Ç–ª–∞ ‚ùå –∑ 21:30 –¥–æ 00:00",
        "–ë—É–¥–µ –∑–∞—Å—Ç–æ—Å–æ–≤—É–≤–∞—Ç–∏—Å—è –≥—Ä–∞—Ñ—ñ–∫\n–ù–µ–º–∞—î —Å–≤—ñ—Ç–ª–∞ ‚ùå –∑ 10:00 –¥–æ 13:00\n–ù–µ–º–∞—î —Å–≤—ñ—Ç–ª–∞ ‚ùå –∑ 21:30 –¥–æ 00:00",
        "–ë–µ–∑ –≤—ñ–¥–∫–ª—é—á–µ–Ω—å",
    ]
    for ind, status in enumerate(["EmergencyShutdowns", "ScheduleApplies", "WaitingForSchedule", "NoOutages"]):
        plan_dict = base_plan | {"status": status, "slots": slots}
        plan = OutagesPlan(**plan_dict)
        assert str(plan) == expected_messages[ind]
